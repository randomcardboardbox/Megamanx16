;
; File generated by cc65 v 2.19 - Git ce3bcad
;
	.fopt		compiler,"cc65 v 2.19 - Git ce3bcad"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_malloc
	.import		_update_megaman
	.import		_animate_megaman
	.import		_load_megaman_spr_data
	.import		_map_info_addr
	.import		_tile_map0_ram_addr
	.import		_tile_map1_ram_addr
	.import		_map_l0_vram_addr
	.import		_map_l1_vram_addr
	.import		_tile_set_addr
	.import		_megaman_obj
	.import		__load_palette_from_file
	.import		__load_file_into_vram
	.import		__load_file_into_ram
	.import		__set_layer0_enable
	.import		__set_layer1_enable
	.import		__set_sprites_enable
	.import		__load_vert_map_sect
	.import		__wait_for_nmi
	.import		__init_irq_handler
	.import		_load_map_data
	.import		_set_scroll
	.export		_set_layer_config
	.export		_main

; ---------------------------------------------------------------
; void __near__ set_layer_config (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_set_layer_config: near

.segment	"CODE"

	lda     #$01
	jsr     __set_layer0_enable
	lda     #$01
	jsr     __set_layer1_enable
	lda     #$01
	jsr     __set_sprites_enable
	lda     #$80
	sta     $9F2A
	sta     $9F2B
	lda     #$42
	sta     $9F2D
	lda     _map_l0_vram_addr+3
	sta     sreg+1
	lda     _map_l0_vram_addr+2
	sta     sreg
	lda     _map_l0_vram_addr+1
	ldx     sreg
	ldy     sreg+1
	sty     sreg
	cpy     #$80
	ldy     #$00
	bcc     L0002
	dey
L0002:	sty     sreg+1
	jsr     asreax1
	sta     $9F2E
	lda     _tile_set_addr
	ldx     _tile_set_addr+1
	jsr     asrax1
	and     #$FC
	ora     #$03
	sta     $9F2F
	stz     $9F30
	stz     $9F31
	stz     $9F32
	stz     $9F33
	lda     #$42
	sta     $9F34
	lda     _map_l1_vram_addr+3
	sta     sreg+1
	lda     _map_l1_vram_addr+2
	sta     sreg
	lda     _map_l1_vram_addr+1
	ldx     sreg
	ldy     sreg+1
	sty     sreg
	cpy     #$80
	ldy     #$00
	bcc     L0003
	dey
L0003:	sty     sreg+1
	jsr     asreax1
	sta     $9F35
	lda     _tile_set_addr
	ldx     _tile_set_addr+1
	jsr     asrax1
	and     #$FC
	ora     #$03
	sta     $9F36
	stz     $9F37
	stz     $9F38
	stz     $9F39
	stz     $9F3A
	stz     $9F2C
	lda     #$02
	tsb     $9F25
	stz     $9F29
	lda     #$7C
	sta     $9F2A
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	ldy     #$0B
	jsr     subysp
	ldy     #$0A
L0002:	lda     M0001,y
	sta     (sp),y
	dey
	bpl     L0002
	ldy     #$10
	jsr     subysp
	ldy     #$0F
L0003:	lda     M0002,y
	sta     (sp),y
	dey
	bpl     L0003
	ldy     #$09
	jsr     subysp
	ldy     #$08
L0004:	lda     M0003,y
	sta     (sp),y
	dey
	bpl     L0004
	jsr     push0
	ldx     #$01
	jsr     _malloc
	sta     _map_info_addr
	stx     _map_info_addr+1
	lda     #$02
	jsr     leaa0sp
	jsr     pushax
	lda     #$08
	jsr     pusha
	lda     _map_info_addr
	ldx     _map_info_addr+1
	jsr     __load_file_into_ram
	lda     #<(_megaman_obj)
	ldx     #>(_megaman_obj)
	jsr     _load_megaman_spr_data
	lda     #$1B
	jsr     leaa0sp
	jsr     pushax
	lda     #$0B
	jsr     pusha
	lda     #$02
	jsr     __load_palette_from_file
	lda     #$0B
	jsr     leaa0sp
	jsr     pushax
	lda     #$10
	jsr     pusha
	lda     _tile_set_addr+1
	jsr     pusha
	ldx     _tile_set_addr
	lda     #$00
	jsr     __load_file_into_vram
	jsr     _set_layer_config
	jsr     _load_map_data
	ldx     #$00
	txa
	jsr     stax0sp
L0006:	jsr     ldax0sp
	cmp     #$20
	txa
	sbc     #$00
	bvc     L000A
	eor     #$80
L000A:	bpl     L0007
	lda     #$01
	sta     $0000
	dea
	jsr     pusha
	lda     #$40
	jsr     pusha
	lda     #$00
	jsr     pusha
	ldy     #$06
	jsr     pushwysp
	lda     _tile_map0_ram_addr
	ldx     _tile_map0_ram_addr+1
	jsr     pushax
	lda     _map_l0_vram_addr+3
	sta     sreg+1
	lda     _map_l0_vram_addr+2
	sta     sreg
	ldx     _map_l0_vram_addr+1
	lda     _map_l0_vram_addr
	jsr     __load_vert_map_sect
	lda     #$02
	sta     $0000
	lda     #$00
	jsr     pusha
	lda     #$40
	jsr     pusha
	lda     #$00
	jsr     pusha
	ldy     #$06
	jsr     pushwysp
	lda     _tile_map1_ram_addr
	ldx     _tile_map1_ram_addr+1
	jsr     pushax
	lda     _map_l1_vram_addr+3
	sta     sreg+1
	lda     _map_l1_vram_addr+2
	sta     sreg
	ldx     _map_l1_vram_addr+1
	lda     _map_l1_vram_addr
	jsr     __load_vert_map_sect
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	bra     L0006
L0007:	jsr     __init_irq_handler
	ldx     #$00
	lda     #$64
	sta     _megaman_obj
	stz     _megaman_obj+1
	sta     _megaman_obj+3
	stz     _megaman_obj+3+1
L000B:	jsr     _update_megaman
	jsr     __wait_for_nmi
	jsr     _set_scroll
	jsr     _animate_megaman
	bra     L000B

.segment	"RODATA"

M0001:
	.byte	$47,$53,$54,$41,$47,$45,$2E,$50,$41,$4C,$00
M0002:
	.byte	$47,$53,$54,$41,$47,$45,$54,$49,$4C,$45,$53,$2E,$53,$50,$52,$00
M0003:
	.byte	$47,$55,$54,$49,$2E,$53,$54,$47,$00

.endproc

